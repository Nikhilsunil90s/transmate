{
  "license": "UNLICENSED",
  "name": "transmate-new",
  "homepage": "https:/www.transmate.eu",
  "version": "2.114.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/ph-poppe/transmate-new.git"
  },
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/transmate-eu"
  },
  "scripts": {
    "analyze-bundle": "source-map-explorer .deploy/static/js/main.*",
    "build": "rm -rf .deploy/bundle && meteor build ./.deploy --directory --server-only --architecture os.linux.x86_64 --allow-superuser",
    "build-docker": "cd .circleci/images/ && docker build . -t jancar/meteorinstall && docker push jancar/meteorinstall",
    "bundle-visualizer": "export RESET_DATABASE=TRUE && meteor --extra-packages bundle-visualizer --production --settings settings-example.json --allow-incompatible-update --exclude-archs web.browser.legacy,web.cordova",
    "check-dependancies": "depcheck --ignore-patterns=.meteor/**,.storybook/**,.testing/**",
    "copy_demo_DB": "mongorestore -h localhost:3001 --drop",
    "cover": "cross-env NODE_ENV=coverage nyc --reporter=html --reporter=text npm run test-pure-js-atlas",
    "cypress-docker": "docker run -it --network=host --entrypoint='' -v \"$PWD:/e2e\" -w /e2e cypress/included:6.3.0 /bin/bash -c 'npm install  --no-save  cypress-file-upload @cypress/webpack-preprocessor @cypress/code-coverage && cypress run --browser chrome --headless'",
    "cypress:open": "export DISPLAY=192.168.1.13:0.0 export LIBGL_ALWAYS_INDIRECT=1 && cypress open --env tags=all",
    "cypress:run": "ELECTRON_RUN_AS_NODE= cypress run --headless --env tags=ci",
    "debugJC": "export DEBUG='dhl*,index*,aws*,address*,accountPortal*,scope*,shipment*,account*,user*,exact*,rate*,synced-cron*,-getExchangeRates*, job*, -notification*,-db*,-priceRequest*,price-request*,-template*,email*,-mongo:directConnect,-mocha*,-snapdragon*,recalculate*'",
    "deploy": "cd .deploy && cf target -s live && cf create-app-manifest meteor -p manifest-temp.yml && cf blue-green-deploy meteor -f manifest-temp.yml --delete-old-apps  && rm manifest-temp.yml",
    "deploy-staging": "cd .deploy && cf target -s staging && cf create-app-manifest meteor-test -p manifest-temp.yml && cf blue-green-deploy meteor-test -f manifest-temp.yml --delete-old-apps  && rm manifest-temp.yml",
    "deploy-tenderify": "sh .script/tenderify-deploy.sh",
    "deploy-test": "cd .deploy && cf target -s live && cf create-app-manifest meteor-test -p manifest-temp.yml && cf blue-green-deploy meteor-test -f manifest-temp.yml --delete-old-apps  && rm manifest-temp.yml",
    "dump_demo_db": "mongodump -v --host '' --username adminTest --password '' --authenticationDatabase admin --ssl --sslAllowInvalidCertificates --sslAllowInvalidHostnames -d 'transmate-demo' --gzip",
    "eslint:github-action": "eslint --quiet . ",
    "graphql-codegen": "graphql-codegen --config graphql-codegen.yml",
    "graphql-codegen-generate": "export GENERATING_GQL_SCHEMA=TRUE WAIT_ON_TIMEOUT=600000 && start-server-and-test start-dev-local http://localhost:3000 graphql-codegen",
    "ibm-deploy-develop-manually": "npm run reset-release-to-develop && npm run ibm-toolchain-run",
    "ibm-test": "export MOCHA_TIMEOUT=10000 SERVER_TEST_REPORTER=xunit  && meteor  test --allow-superuser  --driver-package meteortesting:mocha --once ",
    "ibm-toolchain-run": "npm run ibmlogin && ibmcloud dev pipeline-run 5cee8773-d6f3-4a17-9e31-b9e1f82f830b",
    "ibmlogin": "ibmcloud login --apikey $IBM_CLOUD_API_KEY  --no-region && ibmcloud target --cf-api api.eu-de.cf.cloud.ibm.com -o transmateOrg -s staging -g Default -r eu-de",
    "lint": "eslint . --fix",
    "lint:committed": "LIST=`git diff-index --name-only HEAD | grep -E \"\\.(js|jsx)$\" | grep -v json;`; if [ $LIST ]; then eslint $LIST; fi",
    "note": "METEOR_OFFLINE_CATALOG=1 (can speed up building)",
    "postinstall": "git submodule update --init --recursive",
    "publish-build": "PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]') && npm publish ./.deploy -tag build-$PACKAGE_VERSION",
    "purgeCache": "sh .bluemix/toolchain/scripts/purge_cloudflare.sh run",
    "release": "release-it",
    "reset-release-to-develop": "git remote update && git fetch && git checkout release && git fetch && git reset --hard develop && git push --force origin && git checkout develop",
    "rmdir": "node -e \"var fs = require('fs'); process.argv.slice(1).map((fpath) => fs.rmdirSync(fpath, { recursive: true })); process.exit(0);\"",
    "run:storybook": "export DEBUG=''  && start-storybook --ci -s ./public -p 6006",
    "win:storybook": "set DEBUG=''  && start-storybook --ci -s ./public -p 6006",
    "semantic:build": "cd ./private/semantic/semantic && gulp build",
    "set-env-without-reboot": "cf target -s staging && cf set-env transmate-staging METEOR_SETTINGS ''",
    "start": "unset DOPPLER_TOKEN && export RESET_DATABASE=true ROOT_URL='http://127.0.0.1:3000' && env-cmd  -e mock meteor --exclude-archs web.browser.legacy,web.cordova",
    "start-dev": "export DOPPLER_TOKEN=$DOPPLER_TOKEN_METEOR_DEV && env-cmd -e default,test meteor run  --allow-incompatible-update --exclude-archs web.browser.legacy,web.cordova",
    "start-dev-jan": "export REBUILD_INDEXES=true DOPPLER_TOKEN=$DOPPLER_TOKEN_METEOR_DEV  NODE_ENV=development  DEBUG='bq*,-env,-recalculate*,-stage*,-portal*,partner*,-report*,-tender*,price-list*, -exact*,-templates*,email*,-db*,-routes*,-notification*,-apollo*,-edijobs*,-demo*,-allaccounts*,-getPartnerContacts,-getExchangeRates,-synced-cron*,-price-request*,shipment*,-address*,-users*,-search*,shipment:overview*'   && env-cmd  -e default,test meteor run --exclude-archs web.cordova,web.browser.legacy ",
    "start-dev-win": "env-cmd -e default,local meteor run --exclude-archs web.browser.legacy,web.cordova",
    "start-dev-local": "export DOPPLER_TOKEN=$DOPPLER_TOKEN_METEOR_DEV FIXTURES_KEEP_USERS=true && env-cmd -e default,local,redis meteor run  --exclude-archs web.browser.legacy,web.cordova",
    "start-dev-test-db": "METEOR_OFFLINE_CATALOG=1  meteor run ",
    "start-live": "export REBUILD_INDEXES=true DOPPLER_TOKEN=$DOPPLER_TOKEN_METEOR_DEV NODE_ENV=production  DEBUG='partner*,price-request*,shipment*,address*,users*' && env-cmd -e default,live meteor run  --allow-incompatible-update --exclude-archs web.browser.legacy,web.cordova",
    "start-mongo-db": "docker run -d -p 27017:27017 -v ~/data:/data/db mongo",
    "start-prod-profile": "TOOL_NODE_FLAGS='--max_old_space_size=4096 --gc_interval=100' QUALIA_PROFILE_FOLDER=/home/jan/disk2/meteorapps/transmateNew/.profiling meteor run --production ",
    "start-redis": "docker run -p 6379:6379 -d redis:32bit",
    "start-with-demo-data": "export RESET_DATABASE=TRUE MOCK_CheckAddress=true DEBUG='S3*,-db*,function*,address*,account*,portal*,-babel*,shipment*,stage*,aws*'  && meteor run --allow-incompatible-update --exclude-archs web.browser.legacy,web.cordova",
    "start:e2e": "export METEOR_LOCAL_DIR=.meteor/test RESET_DATABASE=TRUE  NO_RATE_LIMITTER=TRUE  DISABLE_RATE_LIMITER=TRUE && meteor --port 3050  --exclude-archs web.cordova,web.browser.legacy",
    "test": "export MOCHA_TIMEOUT=10000  RESET_DATABASE=TRUE && meteor test --driver-package meteortesting:mocha --port 3050 ",
    "test-app-watch-terminal": "export MOCHA_TIMEOUT=5000 RESET_DATABASE=TRUE  && TEST_WATCH=1 TEST_BROWSER_DRIVER=nightmare meteor test --full-app --driver-package meteortesting:mocha",
    "test-pure-js": "export DEBUG_DHL DEFAULT_MONGO=TRUE RESET_DATABASE=TRUE  && env-cmd -e mocha  mochapack --watch --forbid-only false --webpack-config .testing/mocha/webpack.config-test.js --timeout 10000 imports/**/*.mocha.test.js ",
    "test-pure-js-atlas": "env-cmd -e mocha,atlas,redis mochapack --watch --forbid-only false --webpack-config .testing/mocha/webpack.config-test.js --timeout 10000  imports/**/*.mocha.test.js ",
    "test-pure-js-ci": "export DEFAULT_MONGO=TRUE RESET_DATABASE=TRUE && env-cmd -e mocha mochapack --forbid-only true --webpack-config .testing/mocha/webpack.config-test.js --timeout 10000 imports/**/*.mocha.test.js ",
    "test-pure-js-dhlLabels": "export DOPPLER_TOKEN=$DOPPLER_TOKEN_METEOR_DEV && env-cmd -e mocha,atlas,dhlLabelTest mochapack --watch --forbid-only false --webpack-config .testing/mocha/webpack.config-test.js --timeout 10000  imports/**/shipmentPickingDHLLabels.mocha.test.js ",
    "test-terminal": "export MOCHA_TIMEOUT=5000 RESET_DATABASE=TRUE  MOCHA_GREP='shipment-overview' && meteor test --port 3050 --driver-package meteortesting:mocha ",
    "test-terminal_jan": "export MOCHA_TIMEOUT=5000 RESET_DATABASE=TRUE  MOCHA_GREP='check cron function'  DEBUG='webhook*,shipment*,notification*,price*,getPartnerContacts,synced-cron*' && meteor test --port 3050 --driver-package meteortesting:mocha ",
    "test:coverage:clean": "npm run rmdir -- './.coverage'  '.testing/nyc_output'",
    "test:coverage:e2e": "npm run test:coverage:clean; export BABEL_ENV=COVERAGE &&  npm run test:e2e",
    "test:coverage:mocha": "nyc --clean --nycrc-path=.nycrc.json npm run test-pure-js-atlas",
    "test:coverage:unit": "npm run test:coverage:clean; export BABEL_ENV=COVERAGE COVERAGE=1 COVERAGE_OUT_HTML=1 COVERAGE_APP_FOLDER=\"$PWD/\"  MOCHA_TIMEOUT=5000 RESET_DATABASE=TRUE && meteor test --port 3050 --exclude-archs web.browser.legacy,web.cordova --driver-package meteortesting:mocha --once ",
    "test:coverage:watch": "npm run test:coverage:clean; BABEL_ENV=COVERAGE COVERAGE=1 COVERAGE_VERBOSE=1 COVERAGE_APP_FOLDER=\"$PWD/\" TEST_WATCH=1 meteor test --port 3050 --driver-package meteortesting:mocha ",
    "test:e2e": "export WAIT_ON_TIMEOUT=600000 DEBUG='price-request*' && start-server-and-test start:e2e http://localhost:3050 cypress:open",
    "test:e2e:CI": "export WAIT_ON_TIMEOUT=600000 && start-server-and-test start:e2e http://localhost:3050 cypress:run",
    "test:e2e:cypress:docker": "export WAIT_ON_TIMEOUT=600000 DEBUG='' && start-server-and-test start:e2e http://localhost:3050 cypress-docker",
    "test_circleci": "export RESET_DATABASE=TRUE DEBUG='' MOCHA_TIMEOUT=10000 && env-cmd -e mocha   meteor test --driver-package meteortesting:mocha --once ",
    "test_circleci_jan": "export  RESET_DATABASE=TRUE  MOCHA_TIMEOUT=10000 MOCHA_GREP='price-request notifications'  DEBUG='db*,account*,user*,exact*,-notification*,price*,-getPartnerContacts,shipment*,stage*' && env-cmd -e mocha   meteor test --driver-package meteortesting:mocha --once ",
    "translations:build": "cd ./private/translations && gulp i18next",
    "translations:install": "sudo npm install --global gulp-cli && (cd ./private/translations && npm install)"
  },
  "dependencies": {
    "@adobe/node-fetch-retry": "^1.1.0",
    "@ag-grid-community/client-side-row-model": "^27.1.0",
    "@ag-grid-community/react": "^27.1.0",
    "@ag-grid-enterprise/clipboard": "^27.1.0",
    "@ag-grid-enterprise/column-tool-panel": "^27.1.0",
    "@ag-grid-enterprise/core": "^27.1.0",
    "@ag-grid-enterprise/excel-export": "^27.1.0",
    "@ag-grid-enterprise/filter-tool-panel": "^27.1.0",
    "@ag-grid-enterprise/menu": "^27.1.0",
    "@ag-grid-enterprise/multi-filter": "^27.1.0",
    "@ag-grid-enterprise/range-selection": "^27.1.0",
    "@ag-grid-enterprise/rich-select": "^27.1.0",
    "@ag-grid-enterprise/row-grouping": "^27.1.0",
    "@ag-grid-enterprise/server-side-row-model": "^27.1.0",
    "@ag-grid-enterprise/set-filter": "^27.1.0",
    "@apollo/client": "^3.5.8",
    "@aws-sdk/client-s3": "^3.18.0",
    "@aws-sdk/s3-request-presigner": "^3.35.0",
    "@bull-board/api": "^3.10.0",
    "@bull-board/express": "^3.10.0",
    "@fluentui/react-component-ref": "^0.51.3",
    "@graphql-tools/schema": "^8.2.0",
    "@jaxtis.apia/react-data-table-component": "^6.3.3",
    "@sendgrid/mail": "^7.4.2",
    "@sentry/node": "^6.16.1",
    "@sentry/react": "^6.16.1",
    "@sentry/tracing": "^6.16.1",
    "@transmate-eu/bigquery_module_transmate": "^2.2.5",
    "@transmate-eu/ibm-function-basis": "^2.3.20",
    "@transmate-eu/secrets": "^1.2.15",
    "ajv": "^6.12.6",
    "apollo-server-core": "^3.6.2",
    "apollo-server-express": "^3.6.2",
    "bcrypt": "^5.0.1",
    "body-parser": "^1.19.0",
    "bull": "^4.2.0",
    "cfenv": "^1.2.4",
    "classnames": "^2.2.6",
    "clean-deep": "^3.4.0",
    "convert-units": "^2.3.4",
    "cookie-parser": "^1.4.6",
    "cookie-session": "^2.0.0",
    "country-data": "^0.0.31",
    "crypto-random-string": "^3.3.0",
    "dataloader": "^2.0.0",
    "debug": "^4.3.1",
    "deep-object-diff": "^1.1.0",
    "dot-object": "^2.1.3",
    "email-validator": "^2.0.4",
    "escape-html": "^1.0.3",
    "escape-string-regexp": "^2.0.0",
    "eval": "^0.1.6",
    "eventemitter3": "^4.0.7",
    "express": "^4.17.2",
    "file-saver": "^2.0.5",
    "graphql": "^15.5.0",
    "graphql-fields": "^2.0.3",
    "graphql-tag": "^2.12.4",
    "graphql-type-json": "^0.3.2",
    "handlebars": "^4.7.7",
    "history": "^4.10.1",
    "html-to-text": "^6.0.0",
    "i18n-iso-countries": "^6.5.0",
    "i18next": "^19.9.2",
    "i18next-browser-languagedetector": "^6.0.1",
    "is-html": "^2.0.0",
    "iso-currencies": "^1.1.0",
    "javascript-unwind": "^1.3.3",
    "jsonexport": "^2.5.2",
    "jsonwebtoken": "^8.5.1",
    "lodash.capitalize": "^4.2.1",
    "lodash.debounce": "^4.0.8",
    "lodash.difference": "^4.5.0",
    "lodash.escaperegexp": "^4.1.2",
    "lodash.foreach": "^4.5.0",
    "lodash.get": "^4.4.2",
    "lodash.groupby": "^4.6.0",
    "lodash.isempty": "^4.4.0",
    "lodash.isequal": "^4.5.0",
    "lodash.ismatch": "^4.4.0",
    "lodash.merge": "^4.6.2",
    "lodash.omit": "^4.5.0",
    "lodash.pick": "^4.4.0",
    "lodash.range": "^3.2.0",
    "lodash.round": "^4.0.4",
    "lodash.set": "^4.3.2",
    "lodash.uniqwith": "^4.5.0",
    "lodash.unset": "^4.5.2",
    "meteor-node-stubs": "^1.1.0",
    "mime-types": "^2.1.33",
    "moment": "^2.29.2",
    "money": "^0.2.0",
    "mongo-round": "^1.0.0",
    "nanoid": "^3.2.0",
    "object-hash": "^2.0.3",
    "papaparse": "^5.3.0",
    "passport": "^0.5.2",
    "passport-google-oauth20": "^2.0.0",
    "postmark": "^2.7.3",
    "powerbi-client": "^2.15.1",
    "prop-types": "^15.7.2",
    "react": "^16.14.0",
    "react-awesome-query-builder": "^3.0.0",
    "react-color": "^2.19.3",
    "react-dom": "^16.14.0",
    "react-helmet": "^6.1.0",
    "react-i18next": "^11.14.2",
    "react-phone-input-2": "^2.13.9",
    "react-rating-stars-component": "^2.2.0",
    "react-router": "^5.2.0",
    "react-router-dom": "^5.2.0",
    "react-table": "^7.6.3",
    "react-table-plugins": "^1.3.1",
    "react-toastify": "^8.1.0",
    "sanitize-filename": "^1.6.3",
    "semantic-ui-calendar-react": "^0.15.3",
    "semantic-ui-css": "^2.4.1",
    "semantic-ui-react": "^2.0.3",
    "simpl-schema": "^1.10.2",
    "slate": "^0.66.5",
    "slate-history": "^0.65.3",
    "slate-hyperscript": "^0.59.0",
    "slate-react": "^0.58.4",
    "soap": "^0.43.0",
    "string-similarity": "^3.0.0",
    "styled-components": "^5.2.1",
    "ua-parser-js": "^0.7.23",
    "underscore.string": "^3.3.5",
    "uniforms": "^3.7.0",
    "uniforms-bridge-json-schema": "^3.7.0",
    "uniforms-bridge-simple-schema-2": "^3.7.0",
    "uniforms-semantic": "^3.7.0",
    "uuid": "^8.3.2",
    "xml-formatter": "^2.4.0"
  },
  "devDependencies": {
    "@babel/core": "^7.14.3",
    "@babel/plugin-syntax-top-level-await": "^7.14.5",
    "@babel/plugin-transform-runtime": "^7.14.3",
    "@babel/plugin-transform-typescript": "^7.14.3",
    "@babel/preset-env": "^7.14.2",
    "@babel/preset-react": "^7.13.13",
    "@babel/preset-typescript": "^7.13.0",
    "@graphql-codegen/cli": "^2.6.2",
    "@graphql-codegen/introspection": "1.18.2",
    "@graphql-codegen/typescript": "1.22.1",
    "@graphql-codegen/typescript-operations": "1.18.0",
    "@graphql-codegen/typescript-react-apollo": "^2.2.5",
    "@istanbuljs/nyc-config-babel": "^3.0.0",
    "@jsdevtools/coverage-istanbul-loader": "^3.0.5",
    "@meteorjs/eslint-config-meteor": "^1.0.5",
    "@storybook/addon-essentials": "^6.4.20",
    "@storybook/react": "^6.4.20",
    "@types/graphql": "^14.5.0",
    "@typescript-eslint/eslint-plugin": "^5.4.0",
    "@typescript-eslint/parser": "^5.4.0",
    "apollo": "^2.33.10",
    "babel-eslint": "^10.1.0",
    "babel-loader": "^8.2.2",
    "babel-plugin-direct-import": "^0.7.0",
    "babel-plugin-istanbul": "^6.0.0",
    "babel-plugin-lodash": "^3.3.4",
    "babel-plugin-transform-semantic-ui-react-imports": "^1.4.1",
    "babel-preset-meteor": "^7.10.0",
    "chai": "^4.3.4",
    "css-loader": "^5.1.3",
    "env-cmd": "^10.1.0",
    "enzyme": "^3.11.0",
    "enzyme-adapter-react-16": "^1.15.6",
    "eslint": "^6.8.0",
    "eslint-config-airbnb": "^18.2.1",
    "eslint-config-airbnb-base": "^14.2.1",
    "eslint-config-prettier": "^6.15.0",
    "eslint-import-resolver-meteor": "^0.4.0",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-jsx-a11y": "^6.5.1",
    "eslint-plugin-meteor": "^7.3.0",
    "eslint-plugin-prettier": "^3.3.0",
    "eslint-plugin-react": "^7.29.4",
    "eslint-plugin-react-hooks": "^4.2.0",
    "eslint-plugin-storybook": "^0.5.7",
    "eslint-plugin-unused-imports": "^1.1.1",
    "faker": "^5.4.0",
    "get-graphql-schema": "^2.1.2",
    "graphql-cli": "^4.1.0",
    "istanbul-instrumenter-loader": "^3.0.1",
    "jquery": "^3.6.0",
    "less": "^3.13.1",
    "less-loader": "^5.0.0",
    "lodash": "^4.17.21",
    "mocha": "^9.2.2",
    "mochapack": "^2.1.4",
    "mongodb": "^3.6.9",
    "mongodb-client-encryption": "^1.2.3",
    "mongodb-memory-server": "^6.9.6",
    "node-fetch": "^2.6.7",
    "nodemailer": "^6.7.2",
    "nyc": "^15.1.0",
    "prettier": "^1.19.1",
    "simple-line-icons": "^2.5.5",
    "sinon": "^9.2.4",
    "start-server-and-test": "^1.12.0",
    "webpack": "^4.46.0",
    "wildcard-mock-link": "^2.0.0-rc.6"
  },
  "pre-commit": [
    "lint:committed"
  ],
  "optionalDependencies": {
    "fsevents": "^2.3.2"
  }
}
