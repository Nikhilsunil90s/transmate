name: Build and Deploy Transmate App

on:
  workflow_dispatch:
  pull_request_review:
    types: [submitted]
    branches: ['master']

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      CF_SPACE: live
      CF_APP_NAME: meteor-test
      CF_APP_INSTANCES: 1
      CF_APP_ROUTE: test.transmate.eu
      TOOL_NODE_FLAGS: "--max-old-space-size=6072"
      NODE_OPTIONS: "--max_old_space_size=6072"
      DOPPLER_TOKEN_METEOR_DEV: ${{ secrets.DOPPLER_TOKEN_METEOR_DEV}}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN}}
      SENTRY_ORG: transmate
      SENTRY_PROJECT: transmate-app
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.DEPLOY_TOKEN_GIT }}
          submodules: recursive
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: npm
      - name: set npm key for reading npm packages from github
        run: echo "//npm.pkg.github.com/:_authToken=\"${{ secrets.DEPLOY_TOKEN_GIT }}\"" >> ~/.npmrc
      - uses: jvalkeal/setup-cf-cli@v0
        with:
          version: '7.3.0' # The CLI version to make available on the path.
      - name: check cf
        run: cf version
      - name: install meteor
        # only install meteor if bin isn't found
        run: -v meteor >/dev/null 2>&1 || curl https://install.meteor.com | /bin/sh
      - name: check Meteor versions
        run: |
          echo "Meteor version:"
          # this forces Meteor to download whatever release your project is using
          meteor --version
          which meteor
          echo "Meteor node version:"
          meteor node -v
          echo "Meteor npm version:"
          meteor npm -v
      - name: install npm packages
        run: meteor npm ci

      - name: "set env flags"
        run: |
          export TOOL_NODE_FLAGS="--max-old-space-size=6072"
          export NODE_OPTIONS="--max_old_space_size=6072"
      - name: login cf
        run: cf login -a $CF_API -u apikey -p $CF_API_KEY -o $CF_ORG -s $CF_SPACE 
        env:
          CF_API: ${{ secrets.BLUEMIX_API }}
          CF_ORG: ${{ secrets.BLUEMIX_ORG }}
          CF_SPACE: ${{ secrets.BLUEMIX_SPACE }}
          CF_API_KEY: ${{ secrets.BLUEMIX_API_KEY }}

      - name: testPureMocha
        run: npm run test-pure-js-ci
      - name: build
        run: npm run build 
      - name: deploy test
        if: github.ref == 'refs/heads/develop'
        run: sh .script/meteor-deploy.sh
        env:
          CF_APP_NAME: meteor-test
          CF_APP_INSTANCES: 1
          CF_APP_ROUTE: test.transmate.eu
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_DEPLOY_TEST }}
      - name: deploy live
        if: github.ref == 'refs/heads/master'
        run: sh .script/meteor-deploy.sh
        env:
          CF_APP_NAME: meteor
          CF_APP_INSTANCES: 2
          CF_APP_ROUTE: app.transmate.eu
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_DEPLOY_LIVE }}
      - name: deploy tenderify
        if: github.ref == 'refs/heads/feature/036-reboot-tenderify'
        run: sh .script/meteor-deploy.sh
        env:
          CF_APP_NAME: tenderify
          CF_APP_INSTANCES: 1
          CF_APP_ROUTE: tenderify.transmate.eu
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_DEPLOY_TENDERIFY }}

  purge:
    runs-on: ubuntu-latest
    needs: [build_and_deploy]
    env:
      CLOUDFLARE_PURGE: ${{ secrets.CLOUDFLARE_PURGE }}
    steps:
      - uses: actions/checkout@v2
      - run: ls
      - name: purge
        run: sh .script/purge-cloudflare-cache.sh
